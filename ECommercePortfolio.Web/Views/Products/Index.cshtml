@model ECommercePortfolio.Web.Models.ProductIndexViewModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Products";
}

<div class="container-fluid px-4 py-5">
    <div class="d-flex justify-content-between align-items-center mb-5">
        <h1 class="h2 mb-0">Products</h1>
        <div class="search-container">
            <form asp-action="Index" method="get" class="search-form">
                <div class="input-group">
                    <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Search products..." />
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <div class="d-flex gap-4">
        <!-- Categories Sidebar -->
        <div class="col-lg-3">
            <div class="categories-sidebar">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-white">
                        <h5 class="mb-0">Categories</h5>
                    </div>
                    <div class="list-group list-group-flush category-list">
                        <a asp-action="Index" asp-route-categoryId=""
                           class="list-group-item list-group-item-action d-flex justify-content-between align-items-center @(Model.CategoryId == null ? "active" : "")">
                            <span>All Categories</span>
                            <span class="badge bg-primary rounded-pill">@Model.Products.Count()</span>
                        </a>
                        @foreach (var category in Model.Categories)
                        {
                            <a asp-action="Index" asp-route-categoryId="@category.Id" asp-route-searchTerm="@Model.SearchTerm"
                               class="list-group-item list-group-item-action d-flex justify-content-between align-items-center @(Model.CategoryId == category.Id ? "active" : "")">
                                <span>@category.Name</span>
                                <span class="badge bg-primary rounded-pill">@Model.Products.Count(p => p.CategoryName == category.Name)</span>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Products Grid -->
        <div class="col-lg-9">
            <div class="products-container">
                @if (!Model.Products.Any())
                {
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>No products found matching your criteria.
                    </div>
                }
                else
                {
                    <div class="row card-container row-cols-1 row-cols-md-2 row-cols-lg-3 gap-4 mb-4">
                        @foreach (var product in Model.Products.Take(6))
                        {
                            <div class="col">
                                <div class="card h-100 product-card shadow-sm border-0">
                                    <div class="product-image-wrapper">
                                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                                        {
                                            <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                                        }
                                        else
                                        {
                                            <div class="category-icon-container">
                                                @{
                                                    string iconClass = GetCategoryIcon(product.CategoryName);
                                                }
                                                <i class="@iconClass"></i>
                                            </div>
                                        }
                                        <div class="product-overlay">
                                            <a asp-action="Details" asp-route-id="@product.Id" class="btn btn-primary">
                                                <i class="fas fa-eye me-2"></i>View Details
                                            </a>
                                        </div>
                                    </div>
                                    <div class="card-body d-flex flex-column">
                                        <div class="product-info mb-auto">
                                            <span class="badge bg-light text-primary mb-2">@product.CategoryName</span>
                                            <h5 class="card-title">@product.Name</h5>
                                            <p class="card-text text-truncate">@product.Description</p>
                                            <span class="price-tag">$@product.Price.ToString("0.00")</span>
                                        </div>
                                        <div class="d-flex justify-content-between align-items-center mt-3">
                                            <button class="btn btn-outline-primary btn-sm add-to-cart-btn">
                                                <i class="fas fa-shopping-cart"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    @if (Model.Products.Count() > 6)
                    {
                        <div class="text-center mt-4 mb-5">
                            <button id="loadMoreBtn" class="btn btn-outline-primary px-4 py-2">
                                <i class="fas fa-plus me-2"></i>Load More Products
                            </button>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetCategoryIcon(string categoryName)
    {
        return categoryName?.ToLower() switch
        {
            "electronics" => "fas fa-laptop fa-3x",
            "clothing" => "fas fa-tshirt fa-3x",
            "home & kitchen" => "fas fa-home fa-3x",
            "books" => "fas fa-book fa-3x",
            "sports & outdoors" => "fas fa-hiking fa-3x",
            "beauty & personal care" => "fas fa-spa fa-3x",
            "toys & games" => "fas fa-gamepad fa-3x",
            "automotive" => "fas fa-car fa-3x",
            "grocery" => "fas fa-shopping-basket fa-3x",
            "health" => "fas fa-heartbeat fa-3x",
            "pet supplies" => "fas fa-paw fa-3x",
            "office supplies" => "fas fa-paperclip fa-3x",
            "music & instruments" => "fas fa-music fa-3x",
            _ => "fas fa-box fa-3x" // default icon
        };
    }
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initial product count
            let visibleProducts = 6;
            const totalProducts = @Model.Products.Count();

            // Load more products functionality
            $("#loadMoreBtn").click(function() {
                const productsToShow = 6; // Load 6 more products at a time

                // Show loading state
                $(this).html('<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Loading...');

                // Simulate ajax loading (replace with actual AJAX call in production)
                setTimeout(function() {
                    $.ajax({
                        url: '@Url.Action("LoadMoreProducts")',
                        type: 'GET',
                        data: {
                            skip: visibleProducts,
                            take: productsToShow,
                            categoryId: '@Model.CategoryId',
                            searchTerm: '@Model.SearchTerm'
                        },
                        success: function(data) {
                            // Append new products
                            $('.row-cols-3').append(data);

                            // Update visible count
                            visibleProducts += productsToShow;

                            // Reset button text
                            $("#loadMoreBtn").html('<i class="fas fa-plus me-2"></i>Load More Products');

                            // Hide button if all products are shown
                            if (visibleProducts >= totalProducts) {
                                $("#loadMoreBtn").hide();
                            }
                        }
                    });
                }, 600);
            });
        });
    </script>
}

@section Styles {
    <style>
        /* Custom styles for Products page */
        .search-container {
            max-width: 400px;
        }

        .categories-sidebar .card {
            border-radius: 12px;
            overflow: hidden;
        }

        .category-list .list-group-item {
            border-left: none;
            border-right: none;
            padding: 12px 20px;
            transition: all 0.2s ease;
        }

        .category-list .list-group-item:hover:not(.active) {
            background-color: #f8f9fa;
        }

        .category-list .list-group-item.active {
            background-color: #0d6efd;
            border-color: #0d6efd;
            color: white;
        }

        .product-card {
            border-radius: 12px;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
        }

        .product-image-wrapper {
            position: relative;
            height: 200px;
            overflow: hidden;
        }

        .product-image-wrapper img {
            height: 100%;
            width: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .category-icon-container {
            height: 100%;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f8f9fa;
            color: #0d6efd;
        }

        .product-card:hover .product-image-wrapper img {
            transform: scale(1.05);
        }

        .product-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .product-card:hover .product-overlay {
            opacity: 1;
        }

        .product-info {
            flex: 1;
        }

        .price-tag {
            font-weight: 600;
            font-size: 1.1rem;
            color: #0d6efd;
        }

        .add-to-cart-btn {
            border-radius: 50px;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
        }
.add-to-cart-btn:hover i {
            color: white;
        }
        #loadMoreBtn {
            border-radius: 50px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        #loadMoreBtn:hover {
            background-color: #0d6efd;
            color: white;
        }


    </style>
}